services:
  # React frontend service (production build)
  react:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - split_sentences
    restart: unless-stopped
    networks:
      - app-network

  # Split Sentences API service
  split_sentences:
    build:
      context: ./split_sentences
      dockerfile: Dockerfile
    container_name: pdf-sentence-splitter
    ports:
      - "8000:8000"
    volumes:
      - ./split_sentences/app:/app/app
      - ./split_sentences/upload_data:/app/upload_data
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - MAX_WORKERS=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Redis service (required by split_sentences)
  redis:
    image: redis:alpine
    container_name: pdf-splitter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
